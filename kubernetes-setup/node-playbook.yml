---
- hosts: all
  become: true

  vars:
    proxy_env:
      http_proxy: http://10.200.10.1:8118
      https_proxy: http://10.200.10.1:8118
      no_proxy: localhost,127.0.0.0/8,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,*.local
    
    # Not used yet
    docker_version: 18.09.9.ce
    k8s_version: 1.16.9-0

  tasks:

  - name: Remove old docker packages
    yum:
      name:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine
      state: absent

  - name: Install packages that allow yum to be used over HTTPS
    yum:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
      - screen

  - name: Add docker yum repository
    yum_repository:
      name: Docker
      description: Docker Repository
      file: docker
      baseurl: https://download.docker.com/linux/centos/7/x86_64/stable
      enabled: yes
      gpgcheck: yes
      gpgkey: https://download.docker.com/linux/centos/gpg

  - name: Install docker and its dependecies
    yum: 
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  # - name: Add vagrant user to docker group
  #   user:
  #     name: vagrant
  #     group: docker

  # https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker
  - name: Create /etc/docker directory
    file:
      path: "/etc/docker"
      state: directory

  - name: Setup daemon
    copy:
      dest: "/etc/docker/daemon.json"
      content: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2",
          "storage-opts": [
            "overlay2.override_kernel_check=true"
          ],
          "insecure-registries" : ["10.200.10.1:5000"]
        }

  - name: create path for docker proxy.conf 
    file:
      path: "/etc/systemd/system/docker.service.d"
      state: directory

  - name: create proxy.conf for docker
    copy:
      dest: "/etc/systemd/system/docker.service.d/http-proxy.conf"
      content: |
        [Service]
        Environment="http_proxy=http://10.200.10.1:8118" "https_proxy=http://10.200.10.1:8118" "no_proxy=localhost,127.0.0.0/8,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,*.local"

  - name: Enable and check Docker service
    systemd:
      name: docker
      daemon_reload: yes
      state: started
      enabled: yes

  - name: Remove swapfile from /etc/fstab
    mount:
      name: swap
      fstype: swap
      state: absent

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Set selinux policy to permissive
    selinux:
      policy: targeted
      state: permissive
    when:
      - ansible_os_family == "RedHat"

  - name: Add br_netfilter in /etc/modules-load.d/
    copy:
      dest: /etc/modules-load.d/br_netfilter.conf
      content: br_netfilter

  - name: Load the br_netfilter module
    modprobe:
      name: br_netfilter
      state: present

  - name: Write bridge-netfilter and ip-forward system variables
    copy:
      content: |
        net.ipv4.ip_forward=1
        net.bridge.bridge-nf-call-ip6tables=1
        net.bridge.bridge-nf-call-iptables=1
      dest: /etc/sysctl.d/k8s.conf

  - name: Enable bridge-netfilter and ip-forward system variables
    sysctl:
      name: "{{ item.name }}"
      value: "{{ item.value }}"
    with_items:
      - name: vm.swappiness
        value: 0
      - name: net.ipv4.ip_forward
        value: 1
      - name: net.bridge.bridge-nf-call-ip6tables
        value: 1
      - name: net.bridge.bridge-nf-call-iptables
        value: 1

  - name: Add Kubernetes yum repository
    when: ansible_os_family == "RedHat"
    yum_repository:
      name: kubernetes
      description: Kubernetes Repository
      file: kubernetes
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled: yes
      gpgcheck: yes
      repo_gpgcheck: yes
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      exclude: kube*

  - name: setenforce 0
    shell: setenforce 0

  - name: sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    lineinfile:
      path: /etc/selinux/config
      regexp: '^SELINUX=enforcing$'
      line: 'SELINUX=permissive'

  - name: Install kubernetes packages (RHEL/CentOS)
    when: ansible_os_family == "RedHat"
    yum:
      name:
        - kubelet-{{ k8s_version }}
        - kubeadm-{{ k8s_version }}
        - kubectl-{{ k8s_version }}
      update_cache: yes
      disable_excludes: kubernetes
      state: present
    environment: "{{ proxy_env }}"

  - name: Enable and check kubelet service
    when: ansible_os_family == "RedHat"
    systemd:
      name: kubelet
      daemon_reload: yes
      state: started
      enabled: yes

  - name: Configure node ip
    copy:
      dest: "/etc/sysconfig/kubelet"
      content: |
        [Service]
        KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    systemd:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  handlers:
    - name: docker status
      service: name=docker state=started
